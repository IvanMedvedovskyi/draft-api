import {
  uploadCharacters,
  getAllCharacters,
  getAllCharacterCosts,
  uploadCharacterCosts,
  deleteCharacterCostTableById,
} from "../controllers/charactersController.js";

async function charactersRoutes(app, options) {
  app.post("/upload/characters", {
    schema: {
      tags: ["Characters"],
      summary: "–ó–∞–≥—Ä—É–∑–∫–∞ CSV —Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏",
      description: `
–ó–∞–≥—Ä—É–∂–∞–µ—Ç CSV-—Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö. –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.

üì• –ü–æ–ª—è multipart/form-data:
- file: CSV-—Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏:
  - name
  - imageChar
  - element
  - imageElement
  - specialization
  - imageSpec
  - rarity (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)
    `,
      consumes: ["multipart/form-data"],
      response: {
        200: {
          type: "object",
          properties: {
            status: { type: "string" },
            count: { type: "integer" },
          },
        },
      },
    },
    handler: uploadCharacters,
  });

  app.get("/characters", {
    schema: {
      tags: ["Characters"],
      summary: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π",
      description: "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.",
      response: {
        200: {
          type: "array",
          items: {
            type: "object",
            properties: {
              id: { type: "string" },
              name: { type: "string" },
              imageChar: { type: "string" },
              element: { type: "string" },
              imageElement: { type: "string" },
              specialization: { type: "string" },
              imageSpec: { type: "string" },
              rarity: { type: "integer" },
            },
          },
        },
        404: {
          type: "object",
          properties: {
            error: { type: "string" },
          },
        },
        500: {
          type: "object",
          properties: {
            error: { type: "string" },
          },
        },
      },
    },
    handler: getAllCharacters,
  });

  app.post("/upload/character-costs", {
    schema: {
      tags: ["CharacterCost"],
      summary: "–ó–∞–≥—Ä—É–∑–∫–∞ CSV —Å –∫–æ—Å—Ç–∞–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π",
      description: `
–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–∫–∞—á–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã.

üì• –ü–æ–ª—è multipart/form-data:
- file: CSV-—Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏:
  - m0, m1, m2, m3, m4, m5, m6 (–≤—Å–µ ‚Äî —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞)
  - nolimit (—Å—Ç—Ä–æ–∫–∞ "true"/"false")

- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (—Å—Ç—Ä–æ–∫–∏):
  - creatorName (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
  - ownerContact (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
  - tableName (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
  - csvName (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ)
  - canEditBy (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ) ‚Äî JSON-–º–∞—Å—Å–∏–≤ email-—Å—Ç—Ä–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ["a@example.com", "b@example.com"])
    `,
      consumes: ["multipart/form-data"],
      response: {
        200: {
          type: "object",
          properties: {
            status: { type: "string" },
            count: { type: "integer" },
            tableId: { type: "string" },
          },
        },
        400: {
          type: "object",
          properties: {
            error: { type: "string" },
          },
        },
        500: {
          type: "object",
          properties: {
            error: { type: "string" },
          },
        },
      },
    },
    handler: uploadCharacterCosts,
  });

  app.get("/character-costs", {
    schema: {
      tags: ["CharacterCost"],
      summary: "–ü–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã –∫–æ—Å—Ç–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π",
      description: `
–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–∫–∞—á–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É.

–ö–∞–∂–¥–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≤–∫–ª—é—á–∞–µ—Ç:
- tableId, tableName, creatorName, ownerContact, csvName, canEditBy
- costs: –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –ø–æ–ª—è–º–∏ m0‚Äìm6, noLimit, characterId
    `,
      response: {
        200: {
          type: "array",
          items: {
            type: "object",
            properties: {
              id: { type: "string" },
              tableName: { type: "string" },
              creatorName: { type: "string" },
              ownerContact: { type: "string" },
              csvName: { type: "string" },
              canEditBy: {
                type: "array",
                items: { type: "string" },
              },
              costs: {
                type: "array",
                items: {
                  type: "object",
                  properties: {
                    id: { type: "string" },
                    characterId: { type: "string" },
                    m0: { type: "integer" },
                    m1: { type: "integer" },
                    m2: { type: "integer" },
                    m3: { type: "integer" },
                    m4: { type: "integer" },
                    m5: { type: "integer" },
                    m6: { type: "integer" },
                    noLimit: { type: "boolean" },
                  },
                },
              },
            },
          },
        },
        500: {
          type: "object",
          properties: {
            error: { type: "string" },
          },
        },
      },
    },
    handler: getAllCharacterCosts,
  });

  app.delete("/delete/character-costs", {
    schema: {
      tags: ["CharacterCost"],
      summary: "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫–æ—Å—Ç–æ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π",
      description: `
–£–¥–∞–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Å –∫–æ—Å—Ç–∞–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏.

üì• JSON —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:
- tableId: —Å—Ç—Ä–æ–∫–∞ ‚Äî ID —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    `,
      body: {
        type: "object",
        properties: {
          tableId: { type: "string" },
        },
        required: ["tableId"],
      },
      response: {
        200: {
          type: "object",
          properties: {
            message: { type: "string" },
          },
        },
        400: {
          type: "object",
          properties: {
            message: { type: "string" },
          },
        },
        404: {
          type: "object",
          properties: {
            message: { type: "string" },
          },
        },
        500: {
          type: "object",
          properties: {
            message: { type: "string" },
          },
        },
      },
    },
    handler: deleteCharacterCostTableById,
  });
}

export default charactersRoutes;
